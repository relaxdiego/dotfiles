#!/usr/bin/env bash
set -e

export dotvim_path=~/.vim
export bundle_path=$dotvim_path/bundle
export pack_path=$dotvim_path/pack

ensure_native_plugin_git () {
    # parent_dir must be in the format <namespace>/{start|opt}
    # See: https://linuxconfig.org/how-to-manage-vim-plugins-natively

    plugin_name=$1
    parent_dir=$2
    git_url=$3
    git_ref=${4:-}

    plugin_path="${pack_path}/${parent_dir}/${plugin_name}"

    if [ ! -d "$plugin_path" ]; then
        echo "INSTALLING: $git_url to $plugin_path"
        mkdir -p "$pack_path"
        cd "$pack_path"
        mkdir -p "$parent_dir"
        cd "$parent_dir"
        git clone "$git_url" "$plugin_name"
        cd "$plugin_path"
    fi

    if [ -n "$git_ref" ]; then
        echo "Checking out $plugin_path at $git_ref"
        cd "$plugin_path"
        git fetch --all
        git checkout "$git_ref"
    fi
}

ensure_native_plugin_vimfile () {
    # parent_dir must be in the format <namespace>/{start|opt}
    # See: https://linuxconfig.org/how-to-manage-vim-plugins-natively

    plugin_name=$1
    parent_dir=$2
    http_url=$3
    filename="$(echo "$http_url" | rev | cut -d'/' -f1 | rev)"

    plugin_path="${pack_path}/${parent_dir}/${plugin_name}"

    if [ ! -d "$plugin_path" ]; then
        echo "INSTALLING: $http_url to $plugin_path"
        mkdir -p "$plugin_path"
        curl -L "$http_url" -o "${plugin_path}/${filename}"
    fi
}

# Old-style

ensure_plugin () {
    plugin_name=$1
    repo_url=$2
    git_ref=${3:-}
    plugin_path=$bundle_path/$plugin_name

    if ! [ -d "$plugin_path" ]; then
        echo "Installing plugin: $plugin_name"
        git clone "$repo_url" "$plugin_path"
    else
        echo "Plugin $plugin_name is already installed at $plugin_path"
    fi

    if [ -n "$git_ref" ]; then
        echo "Checking out $plugin_name at $git_ref"
        cd "$plugin_path"
        git fetch --all
        git checkout "$git_ref"
    fi
}
ensure_plugin_absent () {
    plugin_name=$1
    plugin_path=$bundle_path/$plugin_name

    echo "Ensuring Pathogen-based plugin '$plugin_name' is absent"
    rm -rf "${bundle_path:?}"/"${plugin_name}"
}
