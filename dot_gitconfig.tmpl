; vim: set ft=gitconfig:

{{ if not .shared_machine -}}
[user]
    name = {{ .fullname }}
    email = {{ .email }}
    signingkey = {{ .gpg_fingerprint }}

; The file below can contain conditional includes that customizes the [user]
; stanza according to the current path. For example, it might contain:
;
;   [includeIf "gitdir:~/src/github.com/company-name/"]
;      path = ~/.gitconfig-company-name
;
; The above means: if the current repo is a child of ~/src/../company-name,
; include ~/.gitconfig-company-name. In turn, the file ~/.gitconfig-company-name
; might contain:
;
;   [user]
;       email = myemailaddress@company-name.com
;       signingKey = <gpg-signing-key-associated-with-company-email>
;
; For more info on what the file can contain, see https://git-scm.com/docs/git-config
;
; NOTE: The file below is ensured present by run_000_ensure_files.sh.tmpl
[include]
    path = ~/.gitconfig-custom

[github]
    user = {{ .github_username }}

[commit]
    gpgsign = true

[gpg]
{{- if eq .chezmoi.os "linux" }}
    program = gpg2
{{- else if eq .chezmoi.os "darwin" }}
    program = gpg
{{- end }}
{{- end }}

[color]
    ui = auto
    branch = auto
    diff = auto
    status = auto

[color "branch"]
    current = green reverse
    local = green
    remote = red

[color "diff"]
    meta = yellow
    frag = magenta
    old = red
    new = green

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[alias]
    fa = fetch --all
    fm = fetch --multiple origin upstream
    far = fetch --all --recurse-submodules
    unstage = reset HEAD --
    last = log -1 HEAD
    diffc = diff --check
    undo-last-commit = reset --soft HEAD^
    tree = log --graph --pretty=oneline --abbrev-commit --decorate --color
    # View commits as a tree
    t = log --graph --pretty=oneline --abbrev-commit --decorate --color
    # like t but for all branches
    ta = log --graph --pretty=oneline --abbrev-commit --decorate --color --all
    # like ta but with relative time included. Copied from @michaelstack
    tar = log --graph --abbrev-commit --decorate --format=format:'%C(yellow)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    # like ta but with exact datetime. Copied from @michaelstack
    tad = log --graph --date=format:'%Y-%m-%d %H:%M' --abbrev-commit --decorate --format=format:'%C(yellow)%h%C(reset) - %C(bold green)(%ad)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold green)%d%C(reset)' --all
    # Like l -l for a branch. Copied from @michaelstack
    ll = log --graph --pretty=format:"%ad %C(yellow)%h%Cred%d %Creset%s%Cblue [%cn]" --decorate --numstat
    #  Like ll for all branches
    lla = ll --all
    local = log --pretty=oneline @{u}..HEAD
    rewrite = rebase -i --autosquash @{u}
    pr = pull --rebase
    rh = reset --hard
    co = checkout
    rename = branch -m
    dry-run-merge = merge --no-commit --no-ff
    mnff = merge --no-ff
    switch = !legit switch \"$@\"
    branches = !legit branches
    sprout = !legit sprout \"$@\"
    unpublish = !legit unpublish \"$@\"
    harvest = !legit harvest \"$@\"
    sync = !legit sync \"$@\"
    publish = !legit publish \"$@\"
    graft = !legit graft \"$@\"
    list-submodules = config --file .gitmodules --get-regexp path
	ctags = !.git/hooks/ctags
	dad = !curl https://icanhazdadjoke.com/ 2> /dev/null && echo

[apply]
    whitespace = strip

[pager]
    color = true

[status]
    color = true

[core]
    whitespace = trailing-space,space-before-tab
    excludesfile = ~/.gitignore_global
    editor = vim

[filter "media"]
    required = true
    clean = git media clean %f
    smudge = git media smudge %f

[push]
    default = current

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[init]
    templatedir = ~/.git-template
    defaultBranch = main

[user]
	useConfigOnly = true
